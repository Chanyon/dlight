import {View, Derived, DotProp, Effect, Prop, PropDerived, State, Environment} from "@/core";

export class FlowTest extends View {
    @State count = 2
    @State apple = [0,1]
    @State toggle = true

    Body() {
        button("toggle")
            .onclick(() => {
                this.toggle = !this.toggle
            })
        button("append")
            .onclick(() => {
                this.apple = [...this.apple, this.apple.length]
            })
        button("shift")
            .onclick(() => {
                this.apple = this.apple.slice(0, this.apple.length-1)
            })

        div (`count ${this.count}`)
        button("+")
            .onclick(() => {
                this.apple[1] = this.count
                this.count ++
                this.apple = [...this.apple]
            })
        button("-")
            .onclick(() => {
                this.apple[1] = this.count
                this.count --
                this.apple = [...this.apple]
            })
        div (`length ${this.apple.length}`)

        For(let j of [1,2,3]) {
            If (this.toggle) {
                For(let i of this.apple) {
                    If (this.toggle) {
                        div (`${j}${i}`)
                    }

                }
            }
            div("outside")
            div("---")
        }
            
    }
}