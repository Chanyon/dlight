import {View} from "@dlightjs/dlight";
import {_, button, div, State} from "@dlightjs/useless";


function timeout(ms: number) {
  return new Promise((resolve) => setTimeout(resolve, ms));
}

async function go(count: number): any {
  await timeout(1000);
  return `Okkkkkkk${count}`
}

const Await = (value: any, setValue?: any): any => {
    // ---- 一个参数认为是defaultValue，两个认为是value, setValue
    const defaultValue = setValue ? undefined : value
    const awaitFunc = (v: any, setV: any) => {
        v.then((d: any) => setV(d))
        setV(defaultValue)
        return defaultValue
    }
    return defaultValue ? awaitFunc : awaitFunc(value, setValue)
}


const FuckMe = (defaultValue: number) => (_: any, setValue: any): any => {
    let i =  defaultValue ?? 0
    setInterval(() => {
        setValue(i++)
    }, 1000)
    return defaultValue
}
export class TestTest extends View {
    @State @FuckMe(0) ok
    Body() {
        div(this.ok)
    }
}


