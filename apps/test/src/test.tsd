import {View} from "@dlightjs/dlight";
import {_, button, div, Prop, PropState, required, State} from "@dlightjs/useless";
import {Await, StateObject, Watch} from "@dlightjs/decorators";


function timeout(ms: number) {
  return new Promise((resolve) => setTimeout(resolve, ms));
}

async function go(count: number): any {
  await timeout(1000);
  return {aa: `Okkkkkkk${count}`}
}


export class TestTest extends View {
 @State    apples = [{a: 1}, {a: 2}, {a: 3}]

    @View
    Haha({apple}) {
        div(apple.a)
    }

    Body() {
        for (let [idx, apple] of this.apples.entries()) {
           this.Haha()
               .apple(apple)
        }

    }
}

const pure = a => JSON.parse(JSON.stringify(a))