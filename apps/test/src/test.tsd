import {View} from "@dlightjs/dlight";
import {_, button, div, State} from "@dlightjs/useless";


function timeout(ms) {
  return new Promise((resolve) => setTimeout(resolve, ms));
}
const Await = undefined as any

async function go(count: number) {
  await timeout(1000);
  return {
    loading: false,
    a: `Okkkkkkk${count}`,
  }
}
export class TestTest extends View {
    @State count = 0

    @Await t: {loading: boolean, a: string} = go(this.count) ?? ({loading: true, a: "no"})

    a = this.t.a;
    loading = this.t.loading

    Body() {
        div(this.loading)
        div(this.a);
        div(this.count);
        button('+').onclick(() => {
          this.count++;
        });
        button('-').onclick(() => {
          this.count--;
        });
    }
}
